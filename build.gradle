plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'com.mhgandhi'
version = '2.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.8-R0.1-SNAPSHOT")
    implementation('net.dv8tion:JDA:5.0.0'){exclude group: 'club.minnced', module:'opus-java'}
    implementation('club.minnced:discord-webhooks:0.8.4')
    implementation 'org.xerial:sqlite-jdbc:3.46.0.1'
}

tasks {
    shadowJar {
        archiveClassifier.set('')   // output: build/libs/<name>-1.0-SNAPSHOT.jar (shaded)
        // Relocation optional; skip unless you need isolation:
        // relocate 'net.dv8tion', 'com.mhgandhi.bridge.libs.jda'
        // relocate 'okhttp3', 'com.mhgandhi.bridge.libs.okhttp3'
        // relocate 'okio', 'com.mhgandhi.bridge.libs.okio'
        // relocate 'com.fasterxml', 'com.mhgandhi.bridge.libs.jackson'
        // DO NOT use minimize() with JDA
    }
    runServer {
        minecraftVersion("1.21.8")
        dependsOn(shadowJar)
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
